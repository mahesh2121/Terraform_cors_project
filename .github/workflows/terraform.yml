name: Terraform Workflow

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

env:
  TF_VERSION: "1.5.0" # Update this to your Terraform version
  TF_WORKING_DIR: "." # Directory containing your Terraform files
  AWS_REGION: "us-east-1" # Update this to your AWS region
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  terraform:
    name: "Terraform CI/CD"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.TF_WORKING_DIR }}

    steps:
    - name: "Checkout code"
      uses: actions/checkout@v3

    - name: "Set up Terraform"
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: "Terraform Init"
      run: terraform init
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ env.AWS_REGION }}

    - name: "Terraform Format"
      run: terraform fmt -check

    - name: "Terraform Validate"
      run: terraform validate

    - name: "Terraform Plan"
      id: plan
      run: terraform plan -out=tfplan

    # Upload the tfplan artifact for the deploy job
    - name: "Upload Terraform Plan"
      if: github.event_name == 'pull_request'
      uses: actions/upload-artifact@v4
      with:
        name: tfplan
        path: tfplan

  deploy:
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    needs: terraform
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    environment: production

    steps:
    - name: "Checkout code"
      uses: actions/checkout@v3

    - name: "Set up Terraform"
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: "Terraform Init"
      run: terraform init
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ env.AWS_REGION }}

    # Download the tfplan artifact from the terraform job
    - name: "Download Terraform Plan"
      uses: actions/download-artifact@v4
      with:
        name: tfplan

    # Check if the tfplan file exists
    - name: "Check if tfplan file exists"
      run: ls -l tfplan

    - name: "Terraform Apply"
      run: terraform apply -auto-approve tfplan
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ env.AWS_REGION }}
